server.port=8080

# Database Configuration - HARDCODED para evitar problemas de Kubernetes
spring.datasource.url=jdbc:oracle:thin:@reacttodoia9ge_medium?TNS_ADMIN=/tmp/wallet
spring.datasource.username=TODOUSER
spring.datasource.password=WELcome__12345

# Database connection pool and reliability settings
spring.datasource.hikari.initialization-fail-timeout=-1
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA settings to prevent startup failures
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false

# Oracle UCP Configuration
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.type=oracle.ucp.jdbc.PoolDataSource
spring.datasource.oracleucp.connection-factory-class-name=oracle.jdbc.pool.OracleDataSource
spring.datasource.oracleucp.sql-for-validate-connection=select * from dual
spring.datasource.oracleucp.connection-pool-name=connectionPoolName1
spring.datasource.oracleucp.initial-pool-size=15
spring.datasource.oracleucp.min-pool-size=10
spring.datasource.oracleucp.max-pool-size=30

# Logging - REDUCIDO para producci√≥n
logging.level.root=INFO
logging.file.name=logs/application.log
logging.level.oracle.ucp=WARN
logging.level.oracle.jdbc=WARN
logging.level.org.hibernate.SQL=WARN

# Telegram bot configuration
telegram.bot.token=7840136772:AAGxvawXeE4LebbMIijVolze3hKZ8o_D13g
telegram.bot.name=oracle_prueba_equipo22_bot

# CORS configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true