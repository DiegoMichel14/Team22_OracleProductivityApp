version: 0.1
component: build
timeoutInSeconds: 1200
shell: bash
env:
  variables:
    REGISTRY: "mx-queretaro-1.ocir.io"
    NAMESPACE: "axvteqzybmr1"
    REPOSITORY: "taskmanager"
    IMAGE_NAME: "todolistapp-springboot"
    IMAGE_VERSION: "0.1"
  exportedVariables:
    - IMAGE_FULL_NAME
    - VERSION
steps:
  - type: Command
    name: "Install Java 11"
    timeoutInSeconds: 600
    command: |
      echo "Installing Java 11..."
      cd /opt
      wget -q https://corretto.aws/downloads/latest/amazon-corretto-11-x64-linux-jdk.tar.gz
      tar -xzf amazon-corretto-11-x64-linux-jdk.tar.gz
      
      JAVA11_DIR=$(find /opt -maxdepth 1 -name "amazon-corretto-11*" -type d | head -1)
      ln -sf "$JAVA11_DIR" /opt/java11
      echo "✓ Java 11 installed successfully"
      
  - type: Command
    name: "Setup wallet files"
    timeoutInSeconds: 300
    command: |
      echo "Setting up wallet files..."
      
      if [ -d "MtdrSpring/backend/wallet" ]; then
        echo "✓ Wallet directory found"
        ls -la MtdrSpring/backend/wallet/
        
        if [ -f "MtdrSpring/backend/wallet/tnsnames.ora" ]; then
          echo "✓ tnsnames.ora found - wallet setup complete"
        else
          echo "✗ tnsnames.ora not found!"
          exit 1
        fi
      else
        echo "✗ Wallet directory not found!"
        exit 1
      fi
      
  - type: Command
    name: "Build with Maven"
    timeoutInSeconds: 600
    command: |
      export JAVA_HOME=/opt/java11
      export PATH=$JAVA_HOME/bin:$PATH
      
      echo "Building with Maven..."
      cd MtdrSpring/backend
      
      # Build JAR (frontend ya está integrado)
      mvn clean package spring-boot:repackage -DskipTests
      
      # Verify JAR exists
      if [ ! -f "target/MyTodoList-0.0.1-SNAPSHOT.jar" ]; then
        echo "✗ JAR file not found!"
        ls -la target/
        exit 1
      fi
      
      echo "✓ JAR built successfully"
      
  - type: Command
    name: "Build Docker Image"
    timeoutInSeconds: 600
    command: |
      cd MtdrSpring/backend
      
      # Generate version
      VERSION="$(date +'%Y%m%d-%H%M%S')"
      IMAGE_TAG="${REGISTRY}/${NAMESPACE}/${REPOSITORY}/${IMAGE_NAME}:${VERSION}"
      
      # Build image
      docker build -f Dockerfile -t "${IMAGE_TAG}" .
      
      if [ $? -ne 0 ]; then
        echo "✗ Docker build failed!"
        exit 1
      fi
      
      echo "✓ Docker image built: ${IMAGE_TAG}"
      
      # Export for next stage
      export IMAGE_FULL_NAME="${IMAGE_TAG}"
      export VERSION="${VERSION}"
      
      # Create output for deployment stage
      cd ../..
      echo "{\"image\":\"${IMAGE_TAG}\",\"imageVersion\":\"${VERSION}\"}" > build-output.json

outputArtifacts:
  - name: todolist-springboot-image
    type: DOCKER_IMAGE
    location: ${IMAGE_FULL_NAME}